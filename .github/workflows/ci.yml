name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_DIR: ${{ github.workspace }}/build

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            cmake_preset: gcc
          - os: macos-latest
            cmake_preset: clang
          - os: windows-latest
            cmake_preset: msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache vcpkg dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BUILD_DIR }}/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Cache CMake configuration
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BUILD_DIR }}/CMakeCache.txt
            ${{ env.BUILD_DIR }}/CMakeFiles
          key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt', 'vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - name: Set VCPKG_ROOT (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "VCPKG_ROOT=${VCPKG_INSTALLATION_ROOT}" >> $GITHUB_ENV

      - name: Set VCPKG_ROOT (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Configure CMake
        run: >
          cmake 
          --preset ${{ matrix.cmake_preset }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -B ${{ env.BUILD_DIR }} -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ env.BUILD_DIR }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure
